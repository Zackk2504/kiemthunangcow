/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import DAO.HoaDonChiTietDAO;
import DAO.HoaDonDAO;
import DAO.KhachHangDAO;
import DAO.MauSacDAO;
import DAO.NhanVienDAO;
import DAO.SanPhamChiTietDAO;
import DAO.SanPhamDAO;
import DAO.VoucherDAO;
import Entity.HoaDon;
import Entity.HoaDonChiTietVER2;
import Entity.KhachHang;
import Entity.SanPhamChiTiet;
import Entity.Voucher;
import Utils.DongHo;
import Utils.Session;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.text.DecimalFormat;

/**
 *
 * @author zudd4
 */
public class BanHangJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    private String loggedInUser = Session.getInstance().getLoggedInUsername();
    private NhanVienDAO nhanVienDAO = new NhanVienDAO();
    private DefaultTableModel dtmSanPhamChiTiet = new DefaultTableModel();
    private DefaultTableModel dtmHoaDonChiTiet = new DefaultTableModel();
    private DefaultTableModel dtmHoaDon = new DefaultTableModel();
    private SanPhamDAO sanPhamDAO = new SanPhamDAO();
    private MauSacDAO mauSacDAO = new MauSacDAO();
    private SanPhamChiTietDAO sanPhamChiTietDAO = new SanPhamChiTietDAO();
    private List<SanPhamChiTiet> listSPCT = new ArrayList<>();
    private List<HoaDon> listHD = new ArrayList<>();
    private DecimalFormat decimalFormat = new DecimalFormat("#,###");
    private VoucherDAO voucherDAO = new VoucherDAO();
    private int tongTienHang = 0;
    private int soTienGiam = 0;
    private int tongTienPhaiTra = 0;
    private HoaDonDAO hoaDonDAO = new HoaDonDAO();
    private KhachHangDAO khachHangDAO = new KhachHangDAO();
    private HoaDonChiTietDAO hoaDonChiTietDAO = new HoaDonChiTietDAO();
    private int nhanVienID = nhanVienDAO.getIDByUsername(loggedInUser);
    private int chucVu = Integer.parseInt(nhanVienDAO.searchChucVu(loggedInUser));

    public BanHangJFrame() throws SQLException {
        initComponents();
        dtmSanPhamChiTiet = (DefaultTableModel) tblSanPhamChiTiet.getModel();
        dtmHoaDonChiTiet = (DefaultTableModel) tblHoaDonChiTiet.getModel();
        dtmHoaDon = (DefaultTableModel) tblHoaDon.getModel();
        setLocationRelativeTo(null);
        btnDoiMatKhau.setVisible(false);
        btnDangXuat.setVisible(false);
        listSPCT = sanPhamChiTietDAO.getAll();
        showDataSPCT(sanPhamChiTietDAO.getAllDuDieuKien());
        showDataHD(hoaDonDAO.getAllChuaThanhToan());
        txtXinChao.setText("Xin chào: " + nhanVienDAO.searchHoVaTen(loggedInUser));
        txtChucVu.setText("Chức vụ: " + getChucVu(chucVu));
        dongHo();
        txtTongTienHang.setText("TỔNG TIỀN HÀNG: 0 VNĐ");
        txtTienDuocGiam.setText("TIỀN ĐƯỢC GIẢM: 0 VNĐ");
        txtTongTienPhaiTra.setText("TỔNG TIỀN PHẢI TRẢ: 0 VNĐ");
        setDefaultCloseOperation(EXIT_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnTrangThaiHD = new javax.swing.ButtonGroup();
        Background = new javax.swing.JPanel();
        btnTaiKhoan = new javax.swing.JButton();
        btnDoiMatKhau = new javax.swing.JButton();
        btnDangXuat = new javax.swing.JButton();
        txtXinChao = new javax.swing.JLabel();
        txtChucVu = new javax.swing.JLabel();
        txtDongHo = new javax.swing.JLabel();
        btnBanHang = new javax.swing.JButton();
        btnQuanLySanPham = new javax.swing.JButton();
        btnQuanLyKhachHang = new javax.swing.JButton();
        btnQuanLyHoaDon = new javax.swing.JButton();
        btnQuanLyNhanVien = new javax.swing.JButton();
        btnQuanLyVoucher = new javax.swing.JButton();
        btnTrangChu = new javax.swing.JButton();
        btnQuanLyThuocTinh = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHoaDonChiTiet = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblSanPhamChiTiet = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtMaGiamGia = new javax.swing.JTextField();
        btnThemSPToHoaDon = new javax.swing.JButton();
        btnXoaSanPham = new javax.swing.JButton();
        txtTongTienHang = new javax.swing.JLabel();
        txtTienDuocGiam = new javax.swing.JLabel();
        txtTongTienPhaiTra = new javax.swing.JLabel();
        btnThanhToan = new javax.swing.JButton();
        cboMaGiamGia = new javax.swing.JCheckBox();
        btnKiemTra = new javax.swing.JButton();
        cboThemThongTinKhachHang = new javax.swing.JCheckBox();
        jLabel10 = new javax.swing.JLabel();
        txtSoDienThoaiKH = new javax.swing.JTextField();
        btnThemSoDienThoaiKH = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblHoaDon = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        btnTaoHoaDonMoi = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("BÁN HÀNG");

        Background.setBackground(new java.awt.Color(166, 227, 233));
        Background.setForeground(new java.awt.Color(253, 247, 228));

        btnTaiKhoan.setBackground(new java.awt.Color(203, 241, 245));
        btnTaiKhoan.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnTaiKhoan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Gear.png"))); // NOI18N
        btnTaiKhoan.setText("TÀI KHOẢN");
        btnTaiKhoan.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(22, 72, 99), 1, true));
        btnTaiKhoan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTaiKhoanActionPerformed(evt);
            }
        });

        btnDoiMatKhau.setBackground(new java.awt.Color(203, 241, 245));
        btnDoiMatKhau.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnDoiMatKhau.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Key.png"))); // NOI18N
        btnDoiMatKhau.setText("ĐỔI MẬT KHẨU");
        btnDoiMatKhau.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(22, 72, 99), 1, true));
        btnDoiMatKhau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoiMatKhauActionPerformed(evt);
            }
        });

        btnDangXuat.setBackground(new java.awt.Color(203, 241, 245));
        btnDangXuat.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnDangXuat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Exit.png"))); // NOI18N
        btnDangXuat.setText("ĐĂNG XUẤT");
        btnDangXuat.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(22, 72, 99), 1, true));
        btnDangXuat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDangXuatActionPerformed(evt);
            }
        });

        txtXinChao.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtXinChao.setText("Xin chào,");

        txtChucVu.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtChucVu.setText("Chức vụ: ");

        txtDongHo.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        txtDongHo.setForeground(new java.awt.Color(22, 72, 99));
        txtDongHo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Alarm.png"))); // NOI18N
        txtDongHo.setText("09:11:2001");

        btnBanHang.setBackground(new java.awt.Color(203, 241, 245));
        btnBanHang.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnBanHang.setText("BÁN HÀNG");
        btnBanHang.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(22, 72, 99), 1, true));
        btnBanHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBanHangActionPerformed(evt);
            }
        });

        btnQuanLySanPham.setBackground(new java.awt.Color(203, 241, 245));
        btnQuanLySanPham.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnQuanLySanPham.setText("QUẢN LÝ SẢN PHẨM");
        btnQuanLySanPham.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(22, 72, 99), 1, true));
        btnQuanLySanPham.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuanLySanPhamActionPerformed(evt);
            }
        });

        btnQuanLyKhachHang.setBackground(new java.awt.Color(203, 241, 245));
        btnQuanLyKhachHang.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnQuanLyKhachHang.setText("QUẢN LÝ KHÁCH HÀNG");
        btnQuanLyKhachHang.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(22, 72, 99), 1, true));
        btnQuanLyKhachHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuanLyKhachHangActionPerformed(evt);
            }
        });

        btnQuanLyHoaDon.setBackground(new java.awt.Color(203, 241, 245));
        btnQuanLyHoaDon.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnQuanLyHoaDon.setText("QUẢN LÝ HÓA ĐƠN");
        btnQuanLyHoaDon.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(22, 72, 99), 1, true));
        btnQuanLyHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuanLyHoaDonActionPerformed(evt);
            }
        });

        btnQuanLyNhanVien.setBackground(new java.awt.Color(203, 241, 245));
        btnQuanLyNhanVien.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnQuanLyNhanVien.setText("QUẢN LÝ NHÂN VIÊN");
        btnQuanLyNhanVien.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(22, 72, 99), 1, true));
        btnQuanLyNhanVien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuanLyNhanVienActionPerformed(evt);
            }
        });

        btnQuanLyVoucher.setBackground(new java.awt.Color(203, 241, 245));
        btnQuanLyVoucher.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnQuanLyVoucher.setText("QUẢN LÝ VOUCHER");
        btnQuanLyVoucher.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(22, 72, 99), 1, true));
        btnQuanLyVoucher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuanLyVoucherActionPerformed(evt);
            }
        });

        btnTrangChu.setBackground(new java.awt.Color(22, 72, 99));
        btnTrangChu.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnTrangChu.setForeground(new java.awt.Color(255, 255, 255));
        btnTrangChu.setText("TRANG CHỦ");
        btnTrangChu.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, -1, -1, new java.awt.Color(0, 0, 0)));
        btnTrangChu.setBorderPainted(false);
        btnTrangChu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTrangChuActionPerformed(evt);
            }
        });

        btnQuanLyThuocTinh.setBackground(new java.awt.Color(203, 241, 245));
        btnQuanLyThuocTinh.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnQuanLyThuocTinh.setText("QUẢN LÝ THUỘC TÍNH");
        btnQuanLyThuocTinh.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(22, 72, 99), 1, true));
        btnQuanLyThuocTinh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuanLyThuocTinhActionPerformed(evt);
            }
        });

        tblHoaDonChiTiet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "TÊN SẢN PHẨM", "MÀU SẮC", "KÍCH THƯỚC", "ĐƠN GIÁ", "SỐ LƯỢNG"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblHoaDonChiTiet.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHoaDonChiTietMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                tblHoaDonChiTietMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblHoaDonChiTietMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblHoaDonChiTiet);

        tblSanPhamChiTiet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "TÊN SẢN PHẨM", "MÀU SẮC", "KÍCH THƯỚC", "ĐƠN GIÁ", "SỐ LƯỢNG CÒN"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSanPhamChiTiet.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSanPhamChiTietMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblSanPhamChiTiet);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("DÁNH SÁCH SẢN PHẨM:");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("GIỎ HÀNG:");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setText("MÃ GIẢM GIÁ:");

        txtMaGiamGia.setEnabled(false);
        txtMaGiamGia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaGiamGiaActionPerformed(evt);
            }
        });

        btnThemSPToHoaDon.setBackground(new java.awt.Color(22, 72, 99));
        btnThemSPToHoaDon.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnThemSPToHoaDon.setForeground(new java.awt.Color(255, 255, 255));
        btnThemSPToHoaDon.setText("THÊM VÀO GIỎ HÀNG");
        btnThemSPToHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemSPToHoaDonActionPerformed(evt);
            }
        });

        btnXoaSanPham.setBackground(new java.awt.Color(22, 72, 99));
        btnXoaSanPham.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnXoaSanPham.setForeground(new java.awt.Color(255, 255, 255));
        btnXoaSanPham.setText("XÓA SẢN PHẨM TRONG GIỎ HÀNG");
        btnXoaSanPham.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaSanPhamActionPerformed(evt);
            }
        });

        txtTongTienHang.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        txtTongTienHang.setText("TỔNG TIỀN HÀNG:");

        txtTienDuocGiam.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        txtTienDuocGiam.setText("TIỀN ĐƯỢC GIẢM:");

        txtTongTienPhaiTra.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        txtTongTienPhaiTra.setText("TỔNG TIỀN PHẢI TRẢ:");

        btnThanhToan.setBackground(new java.awt.Color(22, 72, 99));
        btnThanhToan.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        btnThanhToan.setForeground(new java.awt.Color(255, 255, 255));
        btnThanhToan.setText("THANH TOÁN");
        btnThanhToan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThanhToanActionPerformed(evt);
            }
        });

        cboMaGiamGia.setBackground(new java.awt.Color(166, 227, 233));
        cboMaGiamGia.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        cboMaGiamGia.setText("SỬ DỤNG MÃ GIẢM GIÁ?");
        cboMaGiamGia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboMaGiamGiaActionPerformed(evt);
            }
        });

        btnKiemTra.setBackground(new java.awt.Color(22, 72, 99));
        btnKiemTra.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnKiemTra.setForeground(new java.awt.Color(255, 255, 255));
        btnKiemTra.setText("KIỂM TRA");
        btnKiemTra.setEnabled(false);
        btnKiemTra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKiemTraActionPerformed(evt);
            }
        });

        cboThemThongTinKhachHang.setBackground(new java.awt.Color(166, 227, 233));
        cboThemThongTinKhachHang.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        cboThemThongTinKhachHang.setText("THÊM THÔNG TIN KHÁCH HÀNG?");
        cboThemThongTinKhachHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboThemThongTinKhachHangActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel10.setText("SỐ ĐIỆN THOẠI KH:");

        txtSoDienThoaiKH.setEnabled(false);
        txtSoDienThoaiKH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSoDienThoaiKHActionPerformed(evt);
            }
        });

        btnThemSoDienThoaiKH.setBackground(new java.awt.Color(22, 72, 99));
        btnThemSoDienThoaiKH.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnThemSoDienThoaiKH.setForeground(new java.awt.Color(255, 255, 255));
        btnThemSoDienThoaiKH.setText("THÊM");
        btnThemSoDienThoaiKH.setEnabled(false);
        btnThemSoDienThoaiKH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemSoDienThoaiKHActionPerformed(evt);
            }
        });

        tblHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NHÂN VIÊN", "KHÁCH HÀNG", "KHUYỄN MÃI", "TỔNG TIỀN HÀNG", "TIỀN ĐƯỢC GIẢM", "TIỀN PHẢI TRẢ"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblHoaDon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHoaDonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tblHoaDonMouseEntered(evt);
            }
        });
        jScrollPane3.setViewportView(tblHoaDon);

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("DANH SÁCH HÓA ĐƠN:");

        btnTaoHoaDonMoi.setBackground(new java.awt.Color(22, 72, 99));
        btnTaoHoaDonMoi.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnTaoHoaDonMoi.setForeground(new java.awt.Color(255, 255, 255));
        btnTaoHoaDonMoi.setText("TẠO HÓA ĐƠN MỚI");
        btnTaoHoaDonMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTaoHoaDonMoiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout BackgroundLayout = new javax.swing.GroupLayout(Background);
        Background.setLayout(BackgroundLayout);
        BackgroundLayout.setHorizontalGroup(
            BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BackgroundLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBanHang, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnQuanLySanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnQuanLyKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnQuanLyHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnQuanLyNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnQuanLyVoucher, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnQuanLyThuocTinh, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTaiKhoan, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDoiMatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDangXuat, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtXinChao)
                    .addComponent(txtChucVu))
                .addGap(18, 18, 18)
                .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BackgroundLayout.createSequentialGroup()
                        .addComponent(btnXoaSanPham)
                        .addContainerGap())
                    .addGroup(BackgroundLayout.createSequentialGroup()
                        .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3)
                            .addComponent(jScrollPane2)
                            .addComponent(jScrollPane1)
                            .addGroup(BackgroundLayout.createSequentialGroup()
                                .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(btnThemSPToHoaDon))
                                .addGap(0, 553, Short.MAX_VALUE)))
                        .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(BackgroundLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(BackgroundLayout.createSequentialGroup()
                                        .addGap(13, 13, 13)
                                        .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cboMaGiamGia)
                                            .addGroup(BackgroundLayout.createSequentialGroup()
                                                .addComponent(jLabel8)
                                                .addGap(39, 39, 39)
                                                .addComponent(txtMaGiamGia, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(26, 26, 26)
                                                .addComponent(btnKiemTra))
                                            .addComponent(cboThemThongTinKhachHang)
                                            .addGroup(BackgroundLayout.createSequentialGroup()
                                                .addComponent(jLabel10)
                                                .addGap(10, 10, 10)
                                                .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(BackgroundLayout.createSequentialGroup()
                                                        .addGap(6, 6, 6)
                                                        .addComponent(btnTaoHoaDonMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(BackgroundLayout.createSequentialGroup()
                                                        .addComponent(txtSoDienThoaiKH, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(26, 26, 26)
                                                        .addComponent(btnThemSoDienThoaiKH, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                                    .addComponent(txtTongTienHang)
                                    .addComponent(txtTienDuocGiam)
                                    .addComponent(txtTongTienPhaiTra))
                                .addContainerGap(109, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BackgroundLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnThanhToan)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BackgroundLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtDongHo)
                                    .addComponent(btnTrangChu, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(42, 42, 42))))))
        );
        BackgroundLayout.setVerticalGroup(
            BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BackgroundLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BackgroundLayout.createSequentialGroup()
                        .addComponent(btnBanHang, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(btnQuanLySanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(btnQuanLyKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(btnQuanLyHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(btnQuanLyNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(btnQuanLyVoucher, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(btnQuanLyThuocTinh, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(btnTaiKhoan, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(btnDoiMatKhau)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                        .addComponent(btnDangXuat)
                        .addGap(38, 38, 38)
                        .addComponent(txtXinChao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtChucVu)
                            .addComponent(txtDongHo))
                        .addContainerGap(10, Short.MAX_VALUE))
                    .addGroup(BackgroundLayout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(BackgroundLayout.createSequentialGroup()
                                .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(btnTrangChu, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(6, 6, 6)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(jLabel1))
                            .addGroup(BackgroundLayout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(cboMaGiamGia)
                                .addGap(10, 10, 10)
                                .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(txtMaGiamGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnKiemTra))
                                .addGap(7, 7, 7)
                                .addComponent(cboThemThongTinKhachHang)
                                .addGap(10, 10, 10)
                                .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addComponent(txtSoDienThoaiKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnThemSoDienThoaiKH))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnTaoHoaDonMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnThemSPToHoaDon)
                        .addGap(7, 7, 7)
                        .addComponent(jLabel2)
                        .addGap(10, 10, 10)
                        .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(BackgroundLayout.createSequentialGroup()
                                .addComponent(txtTongTienHang)
                                .addGap(8, 8, 8)
                                .addComponent(txtTienDuocGiam)
                                .addGap(8, 8, 8)
                                .addComponent(txtTongTienPhaiTra)
                                .addGap(18, 18, 18)
                                .addComponent(btnThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnXoaSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(Background, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTaoHoaDonMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTaoHoaDonMoiActionPerformed
        try {
            // TODO add your handling code here:
            int nhanVienID = nhanVienDAO.getIDByUsername(loggedInUser);
            hoaDonDAO.addData(nhanVienID, 0, 0, 0, 0, 0, 1);
            showDataHD(hoaDonDAO.getAllChuaThanhToan());
            JOptionPane.showMessageDialog(this, "Tạo hóa đơn mới thành công!");
        } catch (SQLException ex) {
            Logger.getLogger(BanHangJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnTaoHoaDonMoiActionPerformed

    private void tblHoaDonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHoaDonMouseClicked
        try {
            // TODO add your handling code here:
            detailDataHD(hoaDonDAO.getAllChuaThanhToan().get(tblHoaDon.getSelectedRow()));
            int hoaDonID = (int) tblHoaDon.getValueAt(tblHoaDon.getSelectedRow(), 0);
            showDataHDCT(hoaDonChiTietDAO.getSPCTByHDID(hoaDonID));
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Có lỗi gì đó: " + ex.getMessage());
        }
    }//GEN-LAST:event_tblHoaDonMouseClicked

    private void btnThemSoDienThoaiKHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemSoDienThoaiKHActionPerformed
        // TODO add your handling code here:
        if (tblHoaDon.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "Bạn chưa chọn hóa đơn để thêm!");
        } else {
            String soDienThoaiKH = txtSoDienThoaiKH.getText();
        if (soDienThoaiKH.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Không được để trống số điện thoại khách hàng!");
        } else {
            if (soDienThoaiKH.length() != 10) {
                JOptionPane.showMessageDialog(this, "Số điện thoại phải có độ dài = 10!");
            } else if (soDienThoaiKH.charAt(0) != '0') {
                JOptionPane.showMessageDialog(this, "Số đầu tiền trong số điện thoại phải là '0'");
            } else {
                int check = 0;
                try {
                    List<KhachHang> listKH = khachHangDAO.getAll();
                    for (KhachHang khachHang : listKH) {
                        if (soDienThoaiKH.equals(khachHang.getSoDienThoai())) {
                            check++;
                        }
                    }
                    
                    if (check == 0) {
                        JOptionPane.showMessageDialog(this, "Số điện thoại này không tồn tại!");
                    } else {
                        int selectedRowHD = tblHoaDon.getSelectedRow();
                        hoaDonDAO.updateKhachHang(khachHangDAO.getIDBSoDienThoai(soDienThoaiKH), (int) tblHoaDon.getValueAt(tblHoaDon.getSelectedRow(), 0));
                        showDataHD(hoaDonDAO.getAllChuaThanhToan());
                        JOptionPane.showMessageDialog(this, "Thêm thành công!,\nKhách hàng: " + khachHangDAO.getTenKhachHang(khachHangDAO.getIDBSoDienThoai(soDienThoaiKH)));
                        tblHoaDon.setRowSelectionInterval(selectedRowHD, selectedRowHD);
                    }
                    } catch (SQLException ex) {
                        Logger.getLogger(BanHangJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        } 
    }//GEN-LAST:event_btnThemSoDienThoaiKHActionPerformed

    private void txtSoDienThoaiKHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSoDienThoaiKHActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSoDienThoaiKHActionPerformed

    private void cboThemThongTinKhachHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboThemThongTinKhachHangActionPerformed
        // TODO add your handling code here:
        if (cboThemThongTinKhachHang.isSelected()) {
            txtSoDienThoaiKH.setEnabled(true);
            btnThemSoDienThoaiKH.setEnabled(true);
        } else {
            txtSoDienThoaiKH.setEnabled(false);
            btnThemSoDienThoaiKH.setEnabled(false);
        }
    }//GEN-LAST:event_cboThemThongTinKhachHangActionPerformed

    private void btnKiemTraActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            int selectedRowHD = tblHoaDon.getSelectedRow();
    
            if (selectedRowHD == -1) {
                JOptionPane.showMessageDialog(this, "Bạn chưa chọn hóa đơn để kiểm tra voucher!");
                return;
            }
    
            int hoaDonID = (int) tblHoaDon.getValueAt(selectedRowHD, 0);
            List<HoaDonChiTietVER2> listHDCT = hoaDonChiTietDAO.getSPCTByHDID(hoaDonID);
            int tongTienHang = tinhTongTien(listHDCT);
    
            int voucherIDToCheck;
            try {
                voucherIDToCheck = Integer.parseInt(txtMaGiamGia.getText());
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(this, "Mã Voucher không hợp lệ!");
                return;
            }
    
            Voucher foundVoucher = findValidVoucher(voucherIDToCheck);
            if (foundVoucher != null) {
                handleValidVoucher(foundVoucher, hoaDonID, tongTienHang);
            } else {
                JOptionPane.showMessageDialog(this, "Không tồn tại mã Voucher này hoặc Voucher đã không còn hoạt động!");
            }
        } catch (SQLException ex) {
            Logger.getLogger(BanHangJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void cboMaGiamGiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboMaGiamGiaActionPerformed
        // TODO add your handling code here:
        if (cboMaGiamGia.isSelected()) {
            txtMaGiamGia.setEnabled(true);
            btnKiemTra.setEnabled(true);
        } else {
            txtMaGiamGia.setEnabled(false);
            btnKiemTra.setEnabled(false);
            txtTienDuocGiam.setText("TIỀN ĐƯỢC GIẢM: 0 VNĐ");
        }
    }//GEN-LAST:event_cboMaGiamGiaActionPerformed

    private void btnThanhToanActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            int selectedRowHD = tblHoaDon.getSelectedRow();
            if (selectedRowHD == -1) {
                JOptionPane.showMessageDialog(this, "Bạn chưa chọn hóa đơn để thanh toán!");
                return;
            }
    
            int hoaDonID = (int) tblHoaDon.getValueAt(selectedRowHD, 0);
            int selectedSPCT = tblSanPhamChiTiet.getSelectedRow();
            int selectedRowHDCT = tblHoaDonChiTiet.getSelectedRow();
            int sanPhamChiTietID = hoaDonChiTietDAO.getIDSPCTByHDID(hoaDonID);
            int soLuongMua = hoaDonChiTietDAO.getSoLuongByHDID(hoaDonID);

            txtTongTienHang.setText("TỔNG TIỀN HÀNG: 0 VNĐ");
            txtTienDuocGiam.setText("TIỀN ĐƯỢC GIẢM: 0 VNĐ");
            txtTongTienPhaiTra.setText("TỔNG TIỀN PHẢI TRẢ: 0 VNĐ");
            hoaDonDAO.thanhToanHoaDon(hoaDonID);
            sanPhamChiTietDAO.updateSoLuong(hoaDonID);
            showDataHD(hoaDonDAO.getAllChuaThanhToan());
            showDataSPCT(sanPhamChiTietDAO.getAllDuDieuKien());
            JOptionPane.showMessageDialog(this, "Thanh toán thành công!");
   
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Có lỗi gì đó: " + ex.getMessage());
        }
    }
    
    private void btnXoaSanPhamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaSanPhamActionPerformed
        int checkHD = 0;
        int checkHDCT = 0;
        int selectedRowHD = tblHoaDon.getSelectedRow();
    
        if (tblHoaDon.getSelectedRow() == -1) {
            checkHD++;
            JOptionPane.showMessageDialog(this, "Chưa chọn hóa đơn trong bảng hóa đơn!");
            return;
        }
    
        if (tblHoaDonChiTiet.getSelectedRow() == -1) {
            checkHDCT++;
            JOptionPane.showMessageDialog(this, "Chưa chọn dòng sản phẩm trong giỏ hàng!");
            return;
        }
    
        if (checkHD == 0 && checkHDCT == 0) {
            if (JOptionPane.showConfirmDialog(this, "Bạn chắc chán muốn xóa sản phẩm này ra khỏi giỏ hàng?", "Thông báo", JOptionPane.INFORMATION_MESSAGE) == JOptionPane.YES_OPTION) {
                try {
                    int selectedRowHDCT = tblHoaDonChiTiet.getSelectedRow();
                    int hoaDonID = (int) tblHoaDon.getValueAt(selectedRowHD, 0);
                    int hoaDonChiTietID = (int) tblHoaDonChiTiet.getValueAt(selectedRowHDCT, 0);

                    if (selectedRowHDCT >= 0 && selectedRowHDCT < tblHoaDonChiTiet.getRowCount()) {
                        JOptionPane.showMessageDialog(this, hoaDonChiTietDAO.removeData(hoaDonChiTietID));
    
                        int tongTienHang = 0;
                        List<HoaDonChiTietVER2> listHDCT = hoaDonChiTietDAO.getSPCTByHDID(hoaDonID);
                        for (HoaDonChiTietVER2 hoaDonChiTietVER2 : listHDCT) {
                            int giaBan = hoaDonChiTietVER2.getSpct().getDonGia();
                            int soLuongMua = hoaDonChiTietVER2.getSoluong();
                            tongTienHang += (giaBan * soLuongMua);
                        }
                        tblHoaDon.setRowSelectionInterval(selectedRowHD, selectedRowHD);
                        hoaDonDAO.updateData(nhanVienID, 0, 0, tongTienHang, 0, tongTienHang, 1, (int) tblHoaDon.getValueAt(selectedRowHD, 0));
                        showDataHDCT(hoaDonChiTietDAO.getSPCTByHDID((int) tblHoaDon.getValueAt(selectedRowHD, 0)));
                        showDataHD(hoaDonDAO.getAllChuaThanhToan());
                        detailDataHD(hoaDonDAO.getAllChuaThanhToan().get(selectedRowHD));
                        showDataHDCT(hoaDonChiTietDAO.getSPCTByHDID((int) tblHoaDon.getValueAt(selectedRowHD, 0)));
                        tblHoaDon.setRowSelectionInterval(selectedRowHD, selectedRowHD);
                    } else {
                        JOptionPane.showMessageDialog(this, "Chưa chọn sản phẩm cần xóa!");
                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, "Có lỗi gì đó: " + ex.getMessage());
                }
            } else {
                JOptionPane.showMessageDialog(this, "Không có sản phẩm nào được xóa!");
            }
        }
    }//GEN-LAST:event_btnXoaSanPhamActionPerformed
    

    private void btnThemSPToHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemSPToHoaDonActionPerformed
        int selectedRowHD = tblHoaDon.getSelectedRow();
        int selectedRowSPCT = tblSanPhamChiTiet.getSelectedRow();
    
        if (selectedRowHD == -1) {
            JOptionPane.showMessageDialog(this, "Bạn chưa chọn hóa đơn để thêm!");
            return;
        }
    
        if (selectedRowSPCT == -1) {
            JOptionPane.showMessageDialog(this, "Bạn chưa chọn sản phẩm để thêm!");
            return; 
        }
    
        try {
            int hoaDonID = (int) tblHoaDon.getValueAt(selectedRowHD, 0);
            int sanPhamChiTietID = (int) tblSanPhamChiTiet.getValueAt(selectedRowSPCT, 0);
    
            String stringSoLuong = JOptionPane.showInputDialog(this, "Vui lòng nhập số lượng cần thêm!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            if (stringSoLuong == null || stringSoLuong.trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập số lượng!");
            } else {
                int soLuong = Integer.parseInt(stringSoLuong);
                if (soLuong > sanPhamChiTietDAO.getSoLuongByIDSPCT(sanPhamChiTietID)) {
                    JOptionPane.showMessageDialog(this, "Số lượng nhập phải nhỏ hơn số lượng còn! (" + sanPhamChiTietDAO.getSoLuongByIDSPCT(sanPhamChiTietID) + ")");
                } else if (soLuong <= 0) {
                    JOptionPane.showMessageDialog(this, "Số lượng nhập phải > 0");
                } else {
                    hoaDonChiTietDAO.addData(hoaDonID, sanPhamChiTietID, soLuong);
                    int tongTienHang = 0;
                    List<HoaDonChiTietVER2> listHDCT = hoaDonChiTietDAO.getSPCTByHDID(hoaDonID);
                    for (HoaDonChiTietVER2 hoaDonChiTietVER2 : listHDCT) {
                        int giaBan = hoaDonChiTietVER2.getSpct().getDonGia();
                        int soLuongMua = hoaDonChiTietVER2.getSoluong();
                        tongTienHang += (giaBan * soLuongMua);
                    }
                    hoaDonDAO.updateData(nhanVienID, 0, 0, tongTienHang, 0, tongTienHang, 1, hoaDonID);
                    showDataHDCT(hoaDonChiTietDAO.getSPCTByHDID(hoaDonID));
                    showDataHD(hoaDonDAO.getAllChuaThanhToan());
                    detailDataHD(hoaDonDAO.getAllChuaThanhToan().get(selectedRowHD));
                    tblHoaDon.setRowSelectionInterval(selectedRowHD, selectedRowHD);
                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Có lỗi gì đó: " + ex.getMessage());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Giá trị nhập phải là số nguyên!");
        }
    }//GEN-LAST:event_btnThemSPToHoaDonActionPerformed
    

    private void txtMaGiamGiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaGiamGiaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaGiamGiaActionPerformed

    private void tblSanPhamChiTietMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSanPhamChiTietMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tblSanPhamChiTietMouseClicked

    private void tblHoaDonChiTietMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHoaDonChiTietMouseClicked
        try {
            // TODO add your handling code here:
            int sanPhamChiTietID = hoaDonChiTietDAO.getIDSPCTByHDCTID((int) tblHoaDonChiTiet.getValueAt(tblHoaDonChiTiet.getSelectedRow(), 0));
            List<SanPhamChiTiet> list = sanPhamChiTietDAO.getAllDuDieuKien();
            for (int i = 0; i < list.size(); i++) {
                if (sanPhamChiTietID == list.get(i).getId()) {
                    tblSanPhamChiTiet.setRowSelectionInterval(i, i);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(BanHangJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tblHoaDonChiTietMouseClicked

    private void btnQuanLyThuocTinhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuanLyThuocTinhActionPerformed
        // TODO add your handling code here:
        if (chucVu == 0) {
            QuanLyThuocTinhJFrame quanLiNhanVien = null;
            try {
                quanLiNhanVien = new QuanLyThuocTinhJFrame();
            } catch (SQLException ex) {
                Logger.getLogger(BanHangJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            this.setVisible(false);
            quanLiNhanVien.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Bạn không đủ quyền hạn để truy cập chức năng này!");
        }
    }//GEN-LAST:event_btnQuanLyThuocTinhActionPerformed

    private void btnTrangChuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTrangChuActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        TrangChuJFrame trangChuJFrame = null;
        try {
            trangChuJFrame = new TrangChuJFrame();
        } catch (SQLException ex) {
            Logger.getLogger(BanHangJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        trangChuJFrame.setVisible(true);
    }//GEN-LAST:event_btnTrangChuActionPerformed

    private void btnQuanLyVoucherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuanLyVoucherActionPerformed
        // TODO add your handling code here:
        if (chucVu == 0) {
            QuanLyVoucherJFrame quanLiNhanVien = null;
            try {
                quanLiNhanVien = new QuanLyVoucherJFrame();
            } catch (SQLException ex) {
                Logger.getLogger(BanHangJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            this.setVisible(false);
            quanLiNhanVien.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Bạn không đủ quyền hạn để truy cập chức năng này!");
        }
    }//GEN-LAST:event_btnQuanLyVoucherActionPerformed

    private void btnQuanLyNhanVienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuanLyNhanVienActionPerformed
        if (chucVu == 0) {
            QuanLyNhanVienJFrame quanLiNhanVien = null;
            try {
                quanLiNhanVien = new QuanLyNhanVienJFrame();
            } catch (SQLException ex) {
                Logger.getLogger(BanHangJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            this.setVisible(false);
            quanLiNhanVien.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Bạn không đủ quyền hạn để truy cập chức năng này!");
        }
    }//GEN-LAST:event_btnQuanLyNhanVienActionPerformed

    private void btnQuanLyHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuanLyHoaDonActionPerformed
        QuanLyHoaDonJFrame quanLiHoaDon = null;
        try {
            quanLiHoaDon = new QuanLyHoaDonJFrame();
        } catch (SQLException ex) {
            Logger.getLogger(BanHangJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.setVisible(false);
        quanLiHoaDon.setVisible(true);
    }//GEN-LAST:event_btnQuanLyHoaDonActionPerformed

    private void btnQuanLyKhachHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuanLyKhachHangActionPerformed
        try {
            // TODO add your handling code here:
            QuanLyKhachHangJFrame quanLyKhachHang = null;
            quanLyKhachHang = new QuanLyKhachHangJFrame();
            this.setVisible(false);
            quanLyKhachHang.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(BanHangJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnQuanLyKhachHangActionPerformed

    private void btnQuanLySanPhamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuanLySanPhamActionPerformed
        try {
            // TODO add your handling code here:
            QuanLySanPhamJFrame quanLySanPham = new QuanLySanPhamJFrame();
            this.setVisible(false);
            quanLySanPham.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(BanHangJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnQuanLySanPhamActionPerformed

    private void btnBanHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBanHangActionPerformed
        // TODO add your handling code here:
        BanHangJFrame banHangJFrame = null;
        try {
            banHangJFrame = new BanHangJFrame();
        } catch (SQLException ex) {
            Logger.getLogger(BanHangJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.setVisible(false);
        banHangJFrame.setVisible(true);
    }//GEN-LAST:event_btnBanHangActionPerformed

    private void btnDangXuatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDangXuatActionPerformed
        // TODO add your handling code here:
        DangNhapJFrame dangNhapJFrame = null;
        try {
            dangNhapJFrame = new DangNhapJFrame();
        } catch (SQLException ex) {
            Logger.getLogger(BanHangJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.setVisible(false);
        dangNhapJFrame.setVisible(true);
    }//GEN-LAST:event_btnDangXuatActionPerformed

    private void btnDoiMatKhauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoiMatKhauActionPerformed
        // TODO add your handling code here:
        DoiMatKhauJFrame doiMatKhauJFrame = null;
        try {
            doiMatKhauJFrame = new DoiMatKhauJFrame();
        } catch (SQLException ex) {
            Logger.getLogger(BanHangJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.setVisible(false);
        doiMatKhauJFrame.setVisible(true);
    }//GEN-LAST:event_btnDoiMatKhauActionPerformed

    private void btnTaiKhoanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTaiKhoanActionPerformed
        // TODO add your handling code here:
        if (!btnDoiMatKhau.isVisible() && !btnDangXuat.isVisible()) {
            btnDoiMatKhau.setVisible(true);
            btnDangXuat.setVisible(true);
        } else {
            btnDoiMatKhau.setVisible(false);
            btnDangXuat.setVisible(false);
        }
    }//GEN-LAST:event_btnTaiKhoanActionPerformed

    private void tblHoaDonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHoaDonMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_tblHoaDonMouseEntered

    private void tblHoaDonChiTietMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHoaDonChiTietMousePressed
        if (evt.getClickCount() == 2) {
            int selectedRowHoaDon = tblHoaDon.getSelectedRow();
            if (selectedRowHoaDon >= 0) {
                String stringSoLuong = JOptionPane.showInputDialog(this, "Vui lòng nhập số lượng cần sửa!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                if (stringSoLuong == null || stringSoLuong.trim().isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Vui lòng nhập số lượng!");
                } else {
                    try {
                        int hoaDonID = (int) tblHoaDon.getValueAt(selectedRowHoaDon, 0);
                        int selectedRowHDCT = tblHoaDonChiTiet.getSelectedRow();
                        int hoaDonChiTietID = (int) tblHoaDonChiTiet.getValueAt(selectedRowHDCT, 0);
                        
                        if (selectedRowHDCT >= 0) {
                            int sanPhamChiTietID = (int) tblSanPhamChiTiet.getValueAt(selectedRowHDCT, 0);
                            int soLuong = Integer.parseInt(stringSoLuong);
    
                            if (soLuong > sanPhamChiTietDAO.getSoLuongByIDSPCT(sanPhamChiTietID)) {
                                JOptionPane.showMessageDialog(this, "Số lượng nhập phải nhỏ hơn số lượng còn! (" + sanPhamChiTietDAO.getSoLuongByIDSPCT(sanPhamChiTietID) + ")");
                            } else if (soLuong <= 0) {
                                JOptionPane.showMessageDialog(this, "Số lượng nhập phải > 0");
                            } else {
                                int selectedRowHD = tblHoaDon.getSelectedRow();
                                hoaDonChiTietDAO.updateSoLuong(soLuong, hoaDonChiTietID);
                                capNhatTongTien(hoaDonID);
                                showDataHDCT(hoaDonChiTietDAO.getSPCTByHDID(hoaDonID));
                                showDataHD(hoaDonDAO.getAllChuaThanhToan());
                                detailDataHD(hoaDonDAO.getAllChuaThanhToan().get(selectedRowHD));
                                tblHoaDon.setRowSelectionInterval(selectedRowHD, selectedRowHD);
                                hoaDonDAO.updateData(nhanVienID, 0, 0, tongTienHang, 0, tongTienHang, 1, hoaDonID);
                            }
                        } else {
                            JOptionPane.showMessageDialog(this, "Vui lòng chọn sản phẩm chi tiết trước khi sửa!");
                        }
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(this, "Có lỗi gì đó: " + ex.getMessage());
                    } catch (NumberFormatException e) {
                        JOptionPane.showMessageDialog(this, "Giá trị nhập phải là số nguyên!");
                    }
                }
            } else {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn hóa đơn!");
            }
        }
    }//GEN-LAST:event_tblHoaDonChiTietMousePressed
    

    private void tblHoaDonChiTietMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHoaDonChiTietMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_tblHoaDonChiTietMouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BanHangJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BanHangJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BanHangJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BanHangJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new BanHangJFrame().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(BanHangJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    private Voucher findValidVoucher(int voucherIDToCheck) throws SQLException {
        List<Voucher> listVoucher = voucherDAO.getAll();
        for (Voucher voucher : listVoucher) {
            if (voucherIDToCheck == voucher.getId() && voucher.getTrangThai() == 0) {
                return voucher;
            }
        }
        return null;
    }
    
    private void handleValidVoucher(Voucher voucher, int hoaDonID, int tongTienHang) {
        try {
            int selectedRowHD = tblHoaDon.getSelectedRow();
            soTienGiam = (int) ((tongTienHang * voucherDAO.giamTheoPhanTram(voucher.getId())) - voucherDAO.giamTheoGiaTien(voucher.getId()));
            JOptionPane.showMessageDialog(this, "Chúc mừng bạn được " + voucher.getMoTa());
            tongTienPhaiTra = tongTienHang - soTienGiam;
            hoaDonDAO.updateVoucher(voucher.getId(), tongTienHang, soTienGiam, tongTienPhaiTra, hoaDonID);
            detailDataHD(hoaDonDAO.getAllChuaThanhToan().get(selectedRowHD));
            showDataHD(hoaDonDAO.getAllChuaThanhToan());
            tblHoaDon.setRowSelectionInterval(selectedRowHD, selectedRowHD);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Voucher này đã không còn hoạt động!");
        }
    }
    
    private int tinhTongTien(List<HoaDonChiTietVER2> listHDCT) {
        int tongTienHang = 0;
        for (HoaDonChiTietVER2 hoaDonChiTietVER2 : listHDCT) {
            int giaBan = hoaDonChiTietVER2.getSpct().getDonGia();
            int soLuongMua = hoaDonChiTietVER2.getSoluong();
            tongTienHang += (giaBan * soLuongMua);
        }
        return tongTienHang;
    }

    private void capNhatTongTien(int hoaDonID) {
        try {
            int selectedRowHD = tblHoaDon.getSelectedRow();
            int tongTienHang = 0;

            List<HoaDonChiTietVER2> listHDCT = hoaDonChiTietDAO.getSPCTByHDID(hoaDonID);
            tongTienHang = tinhTongTien(listHDCT);

            hoaDonDAO.updateData(nhanVienID, 0, 0, tongTienHang, 0, tongTienHang, 1, hoaDonID);
            showDataHDCT(listHDCT);
            showDataHD(hoaDonDAO.getAllChuaThanhToan());
            detailDataHD(hoaDonDAO.getAllChuaThanhToan().get(selectedRowHD));
            tblHoaDon.setRowSelectionInterval(selectedRowHD, selectedRowHD);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Có lỗi gì đó: " + ex.getMessage());
        }
    }

    private boolean checkVoucher() throws SQLException {
        List<Voucher> listVoucher = voucherDAO.getAll();

        for (Voucher voucher : listVoucher) {
            if (Integer.parseInt(txtMaGiamGia.getText()) == voucher.getId()) {
                return true;
            }
        }
        return false;
    }

    private void detailDataHD(HoaDon hoaDon) throws SQLException {
        if (!voucherDAO.getMoTaVoucher(hoaDon.getKhuyenMaiID()).trim().equals("") && voucherDAO.getMoTaVoucher(hoaDon.getKhuyenMaiID()) != null) {
            cboMaGiamGia.setSelected(true);
            txtMaGiamGia.setText(String.valueOf(hoaDon.getKhuyenMaiID()));
            txtMaGiamGia.setEnabled(true);
            btnKiemTra.setEnabled(true);
        } else {
            cboMaGiamGia.setSelected(false);
            txtMaGiamGia.setText("");
            txtMaGiamGia.setEnabled(false);
            btnKiemTra.setEnabled(false);
        }

        if (khachHangDAO.getSDTKhachHang(hoaDon.getKhachHangID()) != null && !khachHangDAO.getSDTKhachHang(hoaDon.getKhachHangID()).trim().equals("")) {
            cboThemThongTinKhachHang.setSelected(true);
            txtSoDienThoaiKH.setText(khachHangDAO.getSDTKhachHang(hoaDon.getKhachHangID()));
            txtSoDienThoaiKH.setEnabled(true);
            btnThemSoDienThoaiKH.setEnabled(true);
        } else {
            cboThemThongTinKhachHang.setSelected(false);
            txtSoDienThoaiKH.setText("");
            txtSoDienThoaiKH.setEnabled(false);
            btnThemSoDienThoaiKH.setEnabled(false);
        }
        
        txtTongTienHang.setText("TỔNG TIỀN HÀNG: " + decimalFormat.format(hoaDon.getTongTienHang()) + " VNĐ");
        txtTienDuocGiam.setText("TỔNG TIỀN ĐƯỢC GIẢM: " + decimalFormat.format(hoaDon.getTongTienDuocGiam()) + " VNĐ");
        txtTongTienPhaiTra.setText("TỔNG TIỀN PHẢI TRẢ: " + decimalFormat.format(hoaDon.getTongTienPhaiTra()) + " VNĐ");
    }

    private void showDataHD(List<HoaDon> list) throws SQLException {
        dtmHoaDon.setRowCount(0);

        for (HoaDon hoaDon : list) {
            Object dataHD[] = {
                hoaDon.getId(),
                nhanVienDAO.getTenNhanVien(hoaDon.getNhanVienID()),
                khachHangDAO.getTenKhachHang(hoaDon.getKhachHangID()),
                voucherDAO.getMoTaVoucher(hoaDon.getKhuyenMaiID()),
                decimalFormat.format(hoaDon.getTongTienHang()) + " VNĐ",
                decimalFormat.format(hoaDon.getTongTienDuocGiam()) + " VNĐ",
                decimalFormat.format(hoaDon.getTongTienPhaiTra()) + " VNĐ"
            };
            dtmHoaDon.addRow(dataHD);
        }
    }

    private void showDataHDCT(List<HoaDonChiTietVER2> list){
        dtmHoaDonChiTiet.setRowCount(0);
        for (HoaDonChiTietVER2 hoaDonChiTietVER2 : list) {
            dtmHoaDonChiTiet.addRow(hoaDonChiTietVER2.toDatarow());
        }
    }

    private void showDataSPCT(List<SanPhamChiTiet> list) throws SQLException {
        dtmSanPhamChiTiet.setRowCount(0);

        for (SanPhamChiTiet sanPhamChiTiet : list) {
            Object dataSPCT[] = {
                sanPhamChiTiet.getId(),
                sanPhamDAO.getTenSanPham(sanPhamChiTiet.getSanPhamID()),
                mauSacDAO.getTenMauSac(sanPhamChiTiet.getMauSacID()),
                getKichThuoc(sanPhamChiTiet.getKichThuocID()),
                decimalFormat.format(sanPhamChiTiet.getDonGia()) + " VNĐ",
                sanPhamChiTiet.getSoLuong()
            };
            dtmSanPhamChiTiet.addRow(dataSPCT);
        }
    }

    private String getTrangThaiHoaDon(int trangThai) {
        if (trangThai == 0) {
            return "Đã thanh toán";
        } else {
            return "Chưa thanh toán";
        }
    }

    private String getKichThuoc(int kichThuocID) {
        switch (kichThuocID) {
            case 0:
                return "X";
            case 1:
                return "S";
            case 2:
                return "M";
            case 3:
                return "L";
            default:
                return "";
        }
    }

    private String getChucVu(int chucVu) {
        if (chucVu == 0) {
            return "Quản lý";
        } else {
            return "Nhân viên";
        }
    }

    private void dongHo() {
        DongHo dongHo = new DongHo(txtDongHo);
        dongHo.start();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Background;
    private javax.swing.JButton btnBanHang;
    private javax.swing.JButton btnDangXuat;
    private javax.swing.JButton btnDoiMatKhau;
    private javax.swing.JButton btnKiemTra;
    private javax.swing.JButton btnQuanLyHoaDon;
    private javax.swing.JButton btnQuanLyKhachHang;
    private javax.swing.JButton btnQuanLyNhanVien;
    private javax.swing.JButton btnQuanLySanPham;
    private javax.swing.JButton btnQuanLyThuocTinh;
    private javax.swing.JButton btnQuanLyVoucher;
    private javax.swing.JButton btnTaiKhoan;
    private javax.swing.JButton btnTaoHoaDonMoi;
    private javax.swing.JButton btnThanhToan;
    private javax.swing.JButton btnThemSPToHoaDon;
    private javax.swing.JButton btnThemSoDienThoaiKH;
    private javax.swing.JButton btnTrangChu;
    private javax.swing.ButtonGroup btnTrangThaiHD;
    private javax.swing.JButton btnXoaSanPham;
    private javax.swing.JCheckBox cboMaGiamGia;
    private javax.swing.JCheckBox cboThemThongTinKhachHang;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tblHoaDon;
    private javax.swing.JTable tblHoaDonChiTiet;
    private javax.swing.JTable tblSanPhamChiTiet;
    private javax.swing.JLabel txtChucVu;
    private javax.swing.JLabel txtDongHo;
    private javax.swing.JTextField txtMaGiamGia;
    private javax.swing.JTextField txtSoDienThoaiKH;
    private javax.swing.JLabel txtTienDuocGiam;
    private javax.swing.JLabel txtTongTienHang;
    private javax.swing.JLabel txtTongTienPhaiTra;
    private javax.swing.JLabel txtXinChao;
    // End of variables declaration//GEN-END:variables
}
